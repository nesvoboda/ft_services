---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: influxdb-pv-claim
  labels:
    app: influxdb
spec:
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 1Gi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: influxdb
  labels:
    app: influxdb
spec:
  replicas: 1
  selector:
    matchLabels:
      app: influxdb
  template:
    metadata:
      labels:
        app: influxdb
    spec:
      containers:
      - name: influxdb
        imagePullPolicy: Never
        image: influxdb
        env:
          - name: CLUSTER_IP
            value: "REPLACE_WITH_MINIKUBE_IP"
        ports:
        - containerPort: 8086
          name: port-8086
        - containerPort: 8088
          name: port-8088
        volumeMounts:
        - name: influxdb-persistent-storage
          mountPath: /persistence
      volumes:
      - name: influxdb-persistent-storage
        persistentVolumeClaim:
          claimName: influxdb-pv-claim
---
apiVersion: v1
kind: Service
metadata:
  name: influxdb-svc
spec:
  type: NodePort
  selector:
    app: influxdb
  ports:
    - name: port-8086
      port: 8086
      nodePort: 8086
    - name: port-8088
      port: 8088
      nodePort: 8088
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx
  labels:
    app: nginx
spec:
  replicas: 1
  selector:
    matchLabels:
      app: nginx
  template:
    metadata:
      labels:
        app: nginx
    spec:
      containers:
      - name: nginx
        imagePullPolicy: Never
        image: nginx
        env:
          - name: CLUSTER_IP
            value: "REPLACE_WITH_MINIKUBE_IP"
          - name: FTP_PASSWORD
            value: "REPLACE_WITH_FTP_PASSWORD"
          - name: PMA_PASSWORD
            value: "REPLACE_WITH_PMA_PASSWORD"
          - name: SSH_PASSWORD
            value: "461b502ee48826c7d31eeffe43c2485148e0c1ed"
        ports:
        - containerPort: 80
---
apiVersion: v1
kind: Service
metadata:
  name: nginx-svc
spec:
  type: NodePort
  selector:
    app: nginx
  ports:
    - port: 80
      protocol: TCP
      name: http
    - port: 22
      protocol: TCP
      name: ssh
      nodePort: 3337
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ftps
  labels:
    app: ftps
spec:
  replicas: 1
  selector:
    matchLabels:
      app: ftps
  template:
    metadata:
      labels:
        app: ftps
    spec:
      containers:
      - name: ftps
        imagePullPolicy: Never
        image: ftps
        env:
          - name: CLUSTER_IP
            value: "REPLACE_WITH_MINIKUBE_IP"
          - name: FTP_PASSWORD
            value: "REPLACE_WITH_FTP_PASSWORD"
        ports:
        - containerPort: 20
          name: port-21
        - containerPort: 21
          name: port-20
        - containerPort: 31100
          name: port-31100
        - containerPort: 31101
          name: port-31101
        - containerPort: 31102
          name: port-31102
        - containerPort: 31103
          name: port-31103
        - containerPort: 31104
          name: port-31104
        - containerPort: 31105
          name: port-31105
        - containerPort: 31106
          name: port-31106
        - containerPort: 31107
          name: port-31107
        - containerPort: 31108
          name: port-31108
        - containerPort: 31109
          name: port-31109
        - containerPort: 31110
          name: port-31110
---
apiVersion: v1
kind: Service
metadata:
  name: ftps-svc
spec:
  type: NodePort
  selector:
    app: ftps
  ports:
    - name: ftp-31100
      nodePort: 31100
      port: 31100
    - name: ftp-31101
      nodePort: 31101
      port: 31101
    - name: ftp-31102
      nodePort: 31102
      port: 31102
    - name: ftp-31103
      nodePort: 31103
      port: 31103
    - name: ftp-31104
      nodePort: 31104
      port: 31104
    - name: ftp-31105
      nodePort: 31105
      port: 31105
    - name: ftp-31106
      nodePort: 31106
      port: 31106
    - name: ftp-31107
      nodePort: 31107
      port: 31107
    - name: ftp-31108
      nodePort: 31108
      port: 31108
    - name: ftp-31109
      nodePort: 31109
      port: 31109
    - name: ftp-31110
      nodePort: 31110
      port: 31110
    # - name: ftps-svc-20
    #   port: 20
---
apiVersion: v1
kind: Service
metadata:
  name: ftps-svc2
spec:
  type: ClusterIP
  selector:
    app: ftps
  ports:
    - name: ftp-21
      port: 3500
      targetPort: 21
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: wordpress
  labels:
    app: wordpress
spec:
  replicas: 1
  selector:
    matchLabels:
      app: wordpress
  template:
    metadata:
      labels:
        app: wordpress
    spec:
      containers:
      - name: wordpress
        imagePullPolicy: Never
        image: wordpress
        env:
          - name: CLUSTER_IP
            value: "REPLACE_WITH_MINIKUBE_IP"
          - name: WPUSR_PASSWORD
            value: "REPLACE_WITH_WPUSR_PASSWORD"
        ports:
        - containerPort: 80
          name: port-21
---
apiVersion: v1
kind: Service
metadata:
  name: wordpress-svc
spec:
  type: NodePort
  selector:
    app: wordpress
  ports:
    - name: http
      port: 80
      nodePort: 5050
---
apiVersion: networking.k8s.io/v1beta1 # for versions before 1.14 use extensions/v1beta1
kind: Ingress
metadata:
  name: ingress-controller
  annotations:
    kubernetes.io/ingress.class: "nginx"
    nginx.ingress.kubernetes.io/rewrite-target: /$1
spec:
  rules:
  - host:
    http:
      paths:
      - path: /
        backend:
          serviceName: nginx-svc
          servicePort: 80
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: mysql-pv-claim
  labels:
    app: mysql
spec:
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 1Gi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mysql
  labels:
    app: mysql
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mysql
  template:
    metadata:
      labels:
        app: mysql
    spec:
      containers:
      - name: mysql
        imagePullPolicy: Never
        image: mysql
        env:
          - name: CLUSTER_IP
            value: "REPLACE_WITH_MINIKUBE_IP"
          - name: WPUSR_PASSWORD
            value: "REPLACE_WITH_WPUSR_PASSWORD"
          - name: MYSQL_ROOT_PASSWORD
            value: "REPLACE_WITH_MYSQL_ROOT_PASSWORD"
          - name: PMA_PASSWORD
            value: "REPLACE_WITH_PMA_PASSWORD"
        ports:
        - containerPort: 3306
          name: port-3306
        volumeMounts:
        - name: mysql-persistent-storage
          mountPath: /testvolume
      volumes:
      - name: mysql-persistent-storage
        persistentVolumeClaim:
          claimName: mysql-pv-claim
---
apiVersion: v1
kind: Service
metadata:
  name: mysql-svc
spec:
  type: NodePort
  selector:
    app: mysql
  ports:
    - name: http
      port: 3306
      nodePort: 3306
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: phpmyadmin
  labels:
    app: phpmyadmin
spec:
  replicas: 1
  selector:
    matchLabels:
      app: phpmyadmin
  template:
    metadata:
      labels:
        app: phpmyadmin
    spec:
      containers:
      - name: phpmyadmin
        imagePullPolicy: Never
        image: phpmyadmin
        env:
          - name: CLUSTER_IP
            value: "REPLACE_WITH_MINIKUBE_IP"
          - name: PMA_PASSWORD
            value: "REPLACE_WITH_PMA_PASSWORD"
        ports:
        - containerPort: 80
          name: port-80
---
apiVersion: v1
kind: Service
metadata:
  name: phpmyadmin-svc
spec:
  type: NodePort
  selector:
    app: phpmyadmin
  ports:
    - name: http
      port: 80
      nodePort: 5000

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: grafana
  labels:
    app: grafana
spec:
  replicas: 1
  selector:
    matchLabels:
      app: grafana
  template:
    metadata:
      labels:
        app: grafana
    spec:
      containers:
      - name: grafana
        imagePullPolicy: Never
        image: grafana
        env:
          - name: CLUSTER_IP
            value: "REPLACE_WITH_MINIKUBE_IP"
        ports:
        - containerPort: 3000
          name: port-3000
---
apiVersion: v1
kind: Service
metadata:
  name: grafana-svc
spec:
  type: NodePort
  selector:
    app: grafana
  ports:
    - name: port-3000
      port: 3000
      nodePort: 3000
